<?xml version="1.0" encoding="UTF-8"?>
<allClasses>
   <apiPackage id="org.as3utils">
      <apiName>org.as3utils</apiName>
      <apiDetail/>
      <apiClassifier id="org.as3utils:ReflectionUtil">
         <apiName>ReflectionUtil</apiName>
         <shortdesc>
	 Provides a very basic reflection API.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Provides a very basic reflection API.
	 <p>This is a static class and shouldn't be instantiated.</p>
	 
	           </apiDesc>
            <example>
	 
	              <b>getClassName()</b>
	              <codeblock rev="3.0">
	 import flash.display.Sprite;
	 import org.as3coreaddendum.system.Reflection;
	 import org.as3coreaddendum.system.comparators.NumberComparator;
	 
	 var str  :String             = "";
	 var s    :Sprite             = new Sprite();
	 var n    :NumberComparator   = new NumberComparator();
	 
	 Reflection.getClassName(str)                 // String
	 Reflection.getClassName(String)              // String
	   
	 Reflection.getClassName(s)                   // Sprite
	 Reflection.getClassName(Sprite)              // Sprite
	 
	 Reflection.getClassName(n)                   // NumberComparator
	 Reflection.getClassName(NumberComparator)    // NumberComparator
	 </codeblock>
	 
	              <b>getClassPackage()</b>
	              <codeblock rev="3.0">
	 import flash.display.Sprite;
	 import org.as3coreaddendum.system.Reflection;
	 import org.as3coreaddendum.system.comparators.NumberComparator;
	 
	 var str  :String             = "";
	 var s    :Sprite             = new Sprite();
	 var n    :NumberComparator   = new NumberComparator();
	 
	 Reflection.getClassPackage(str)                 // null
	 Reflection.getClassPackage(String)              // null
	   
	 Reflection.getClassPackage(s)                   // flash.display
	 Reflection.getClassPackage(Sprite)              // flash.display
	 
	 Reflection.getClassPackage(n)                   // org.as3coreaddendum.system.comparators
	 Reflection.getClassPackage(NumberComparator)    // org.as3coreaddendum.system.comparators
	 </codeblock>
	 
	              <b>getClassPath()</b>
	              <codeblock rev="3.0">
	 import flash.display.Sprite;
	 import org.as3coreaddendum.system.Reflection;
	 import org.as3coreaddendum.system.comparators.NumberComparator;
	 
	 var str  :String             = "";
	 var s    :Sprite             = new Sprite();
	 var n    :NumberComparator   = new NumberComparator();
	 
	 Reflection.getClassPath(str)                 // String
	 Reflection.getClassPath(String)              // String
	   
	 Reflection.getClassPath(s)                   // flash.display.Sprite
	 Reflection.getClassPath(Sprite)              // flash.display.Sprite
	 
	 Reflection.getClassPath(n)                   // org.as3coreaddendum.system.comparators.NumberComparator
	 Reflection.getClassPath(NumberComparator)    // org.as3coreaddendum.system.comparators.NumberComparator
	 </codeblock>
	 
	              <b>getSuperClassName()</b>
	              <codeblock rev="3.0">
	 import flash.display.Sprite;
	 import org.as3coreaddendum.system.Reflection;
	 import org.as3coreaddendum.system.comparators.NumberComparator;
	 
	 var str  :String             = "";
	 var s    :Sprite             = new Sprite();
	 var n    :NumberComparator   = new NumberComparator();
	 
	 Reflection.getSuperClassName(str)                 // Object
	 Reflection.getSuperClassName(String)              // Object
	   
	 Reflection.getSuperClassName(s)                   // DisplayObjectContainer
	 Reflection.getSuperClassName(Sprite)              // DisplayObjectContainer
	 
	 Reflection.getSuperClassName(n)                   // Object
	 Reflection.getSuperClassName(NumberComparator)    // Object
	 </codeblock>
	 
	              <b>getSuperClassPackage()</b>
	              <codeblock rev="3.0">
	 import flash.display.Sprite;
	 import org.as3coreaddendum.system.Reflection;
	 import org.as3coreaddendum.system.comparators.NumberComparator;
	 
	 var str  :String             = "";
	 var s    :Sprite             = new Sprite();
	 var n    :NumberComparator   = new NumberComparator();
	 
	 Reflection.getSuperClassPackage(str)                 // null
	 Reflection.getSuperClassPackage(String)              // null
	   
	 Reflection.getSuperClassPackage(s)                   // flash.display
	 Reflection.getSuperClassPackage(Sprite)              // flash.display
	 
	 Reflection.getSuperClassPackage(n)                   // null
	 Reflection.getSuperClassPackage(NumberComparator)    // null
	 </codeblock>
	 
	              <b>getSuperClassPath()</b>
	              <codeblock rev="3.0">
	 import flash.display.Sprite;
	 import org.as3coreaddendum.system.Reflection;
	 import org.as3coreaddendum.system.comparators.NumberComparator;
	 
	 var str  :String             = "";
	 var s    :Sprite             = new Sprite();
	 var n    :NumberComparator   = new NumberComparator();
	 
	 Reflection.getSuperClassPath(str)                 // Object
	 Reflection.getSuperClassPath(String)              // Object
	   
	 Reflection.getSuperClassPath(s)                   // flash.display.DisplayObjectContainer
	 Reflection.getSuperClassPath(Sprite)              // flash.display.DisplayObjectContainer
	 
	 Reflection.getSuperClassPath(n)                   // Object
	 Reflection.getSuperClassPath(NumberComparator)    // Object
	 </codeblock>
	 
	           </example>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="ReflectionUtil,org.as3utils.ReflectionUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:BooleanUtil">
         <apiName>BooleanUtil</apiName>
         <shortdesc>
	 A utility class to work with Boolean objects.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class to work with <codeph>Boolean</codeph> objects.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="BooleanUtil,org.as3utils.BooleanUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:DrawUtil">
         <apiName>DrawUtil</apiName>
         <shortdesc>
	 A utility class for working with drawings.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class for working with drawings.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="DrawUtil,org.as3utils.DrawUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:MathUtil">
         <apiName>MathUtil</apiName>
         <shortdesc>
	 A utility class for working with mathematical operations.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class for working with mathematical operations.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="MathUtil,org.as3utils.MathUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:EquatableUtil">
         <apiName>EquatableUtil</apiName>
         <shortdesc>
	 A utility class to work with objects that implement org.as3coreaddendum.system.IEquatable.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class to work with objects that implement <codeph>org.as3coreaddendum.system.IEquatable</codeph>.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="EquatableUtil,org.as3utils.EquatableUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:RandomUtil">
         <apiName>RandomUtil</apiName>
         <shortdesc>
	 A utility class for working with random numbers.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class for working with random numbers.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="RandomUtil,org.as3utils.RandomUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:StringUtil">
         <apiName>StringUtil</apiName>
         <shortdesc>
	 A utility class to work with String objects.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class to work with <codeph>String</codeph> objects.
	 <p>StringUtil handles <codeph>null</codeph> input Strings quietly. That is to say that a <codeph>null</codeph> input will return <codeph>null</codeph>.
	 Where a <codeph>Boolean</codeph> or <codeph>int</codeph> is being returned details vary by method.</p>
	              <p>Some terms used by this class related to <codeph>String</codeph> handling:</p>
	              <p>
                  <ul>
	                    <li>empty: a zero-length <codeph>String</codeph> ("")</li>
	                    <li>space: the space character (" ", char 32)</li>
	                    <li>blank: a <codeph>String</codeph> object only with control chars (space, \t, \n, \s)</li>
	                 </ul>
               </p>
	 
	           </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="StringUtil,org.as3utils.StringUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:URLUtil">
         <apiName>URLUtil</apiName>
         <shortdesc>
	 A utility class to work with URL strings.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class to work with <codeph>URL</codeph> strings.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="URLUtil,org.as3utils.URLUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:ArrayUtil">
         <apiName>ArrayUtil</apiName>
         <shortdesc>
	 A utility class to work with Array objects.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class to work with <codeph>Array</codeph> objects.
	 <p>ArrayUtil handles <codeph>null</codeph> input arrays quietly in almost all methods.
	 When not, it's documented in the method.
	 That is to say that a <codeph>null</codeph> input will not thrown an error in almost all methods.</p>
	 
	           </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="ArrayUtil,org.as3utils.ArrayUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:ByteConversionUtil">
         <apiName>ByteConversionUtil</apiName>
         <shortdesc>
	 A utility class for working with conversion of bytes.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class for working with conversion of bytes.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="ByteConversionUtil,org.as3utils.ByteConversionUtil,GIGABYTE,KILOBYTE,MEGABYTE,TERABYTE,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
      <apiClassifier id="org.as3utils:NumberUtil">
         <apiName>NumberUtil</apiName>
         <shortdesc>
	 A utility class to work with Number objects.</shortdesc>
         <prolog>
            <author>Flávio Silva
	 </author>
            <asMetadata/>
         </prolog>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A utility class to work with <codeph>Number</codeph> objects.
	 
	 </apiDesc>
         </apiClassifierDetail>
         <Keywords>
            <meta name="keywords"
                  content="NumberUtil,org.as3utils.NumberUtil,abbreviate,addAt,appendVar,areEqual,border,bytesToGigabytes,bytesToKilobytes,bytesToMegabytes,bytesToTerabytes,capitalize,circ,classNameEquals,classPackageEquals,classPathEquals,contains,contains,containsAny,containsDuplication,containsNone,containsOnly,containsOnlyType,containsType,countMatches,defaultIfEmpty,degreesToRadians,endsWith,equals,equals,filterByType,firstChar,getClassName,getClassPackage,getClassPath,getDuplicate,getSuperClassName,getSuperClassPackage,getSuperClassPath,getURLRequest,gigabytesToBytes,isAllLowerCase,isAllUpperCase,isAlphanumeric,isAlphanumericSpace,isBlank,isBooleanString,isEmpty,isEmpty,isEven,isHttps,isHttp,isNotBlank,isNotEmpty,isNotEmpty,isNotNumber,isNumber,isNumeric,isNumericSpace,isOdd,isSameLength,isValidEmail,kilobytesToBytes,lastChar,ltrim,maxValue,maxValueIndex,megabytesToBytes,millisecondsToSeconds,navigateToURL,nullToEmpty,percentToRange,radiansToDegrees,random,randomArray,rangeToPercent,rect,remove,removeAccentuation,removeAllOccurances,removeAt,removeEnd,removeFirstCharacter,removeFirstOccurance,removeLastCharacter,removeLastOccurance,removeStart,replaceExtended,reverse,round,rtrim,shuffle,sortAlphabetically,sortAlphabeticallyByObjectProperty,sortAscending,sortAscendingByObjectProperty,sortDescending,sortDescendingByObjectProperty,startsWith,string2Boolean,superClassNameEquals,superClassPackageEquals,superClassPathEquals,swap,swapAt,swapPositions,terabytesToBytes,trim,trimToEmpty,trimToNull,uncapitalize,uniqueCopy,zeroPrecedent"/>
         </Keywords>
      </apiClassifier>
   </apiPackage>
</allClasses>